name: Build Electron

on:
  workflow_dispatch:
  # push:
  #   branches: ['main']
  # pull_request:
  #   branches: ['main']

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Get version and short commit hash
        id: get_version_and_commit
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build
        run: |
          yarn install
          yarn build

      - name: Delete release
        uses: cb80/delrel@latest
        with:
          tag: 'latest'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: build/dist/*.exe
          tag: 'latest'
          overwrite: true
          body: 'Auto build for the latest commit'
          release_name: 'v${{ env.VERSION }} - ${{ env.SHORT_SHA }}'
